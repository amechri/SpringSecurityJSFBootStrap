<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

	<annotation-driven />
	<context:component-scan base-package="com.akr" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" 
		/> <beans:property name="url" value="jdbc:oracle:thin:@fragxpdb01dev-dc1.esi.adp.com:12014:TGXP10" 
		/> <beans:property name="username" value="XER2DEV" /> <beans:property name="password" 
		value="ADPGSI_01" /> </beans:bean> -->
	
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://localhost:3306/mabd" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="root" />
	</beans:bean>
	
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.akr.model.User</beans:value>
				<beans:value>com.akr.model.Role</beans:value>
				<beans:value>com.akr.model.UserRole</beans:value>
				<beans:value>com.akr.model.Collab</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.use_sql_comments">true</beans:prop>
				<beans:prop key="hibernate.format_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">create</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/templates/resources/**"
			access="permitAll" />
		<security:intercept-url pattern="/templates/common/**"
			access="permitAll" />
		<security:intercept-url pattern="/templates/layout/**"
			access="permitAll" />
		<security:intercept-url pattern="/templates/admin/**"
			access="hasRole('ROLE_ADMIN')" />
		<security:form-login login-page="/login.jsf"
			default-target-url="/templates/layout/welcome.jsf"
			authentication-failure-url="/login.jsf?status=error" />
		<security:logout logout-url="/logout"
			logout-success-url="/login.jsf?status=logout" />
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select username, password, enabled from app_users where enabled = '1' and username = ?"
				authorities-by-username-query="select ur.username, u.libelle from app_roles u, app_users_roles ur where u.id_role = ur.id_role and ur.username = ?  " />
			<security:password-encoder ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- Password Hashing Bean -->
	<beans:bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="8" />
	</beans:bean>
</beans:beans>